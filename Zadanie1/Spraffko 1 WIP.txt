Zadanie 1: Szkielet aplikacji do przetwarzania i analizy obrazów, operacje podstawowe, usuwanie
			szumu, modyfikacje histogramu, filtracja liniowa i nieliniowa, splot.

1. Cel
	Celem zadania było stworzenie aplikacji, która daje możliwość przetworzenia obrazu
	przy pomocy wybranego filtru z listy. W jej skład wchodzą 3 podstawowe filtry takie jak:
	- zmiana jasności
	- zmiana kontrastu
	- wyznaczenie negatywu obrazu
	oraz 3 filtry przydzielone indywidualnie dla grupy. W naszym przypadku są to filtry:
	- wyjściowa gęstość prawdopodobieństwa podana wzorem Raleigha
	- wydobycie szczegółów z tła: południe, południowy-zachód, zachód, północny-zachód
	- operator Rosenfelda
	
2. Wprowadzenie 
	Filtracja obrazu polega na modyfikowaniu wartości pikseli obrazu wejściowego w celu uzyskania
	innego obrazu wyjściowego. Na właściowści przetworzonego piksela mogą wpływać wartości pikseli
	z jego najbliższego otoczenia. Stąd filtracja jest przekształceniem kontekstowym.
	
2.1 Opis przekształceń
	Poniżej zostaną przedstawione metody zrealizowane w ramach zadania.
	
	Zmiana jasności:
		
		p_0[n, m] = p_1[n, m] + x, gdzie x to parametr przekształcenia
	
	Zmiana kontrastu:
		
		p_0[n, m] = x(p_1[n, m] - 1/2) + 1/2
		
	Negacja:
	
		p_0[n, m] = 1 - p_1[n, m]
		
	Usuwanie szumów
	
		W aplikacji zostały zaimplementowane 2 filtry, służące do usuwania szumów:
		- filtr medianowy
		- filtr ze średnią arytmetyczną
		Maska jest kwadratem o danym boku, a działanie wybranego filtra polega na znalezieniu
		mediany lub średniej arytmetycznej dla pikseli z obszaru maski. Dla obiektywnej oceny 
		działania filtrów, wykorzystano błąd średniokwadratowy(mean squar error):
		
			<insert the equation for MSE from lecture number 2 page 2>   (1)
		
	Histogram

		Do przeprowadzenia testów aplikacji zostały wykorzystane obrazy kolorowe. Aby móc utworzyć
		histogram dla takiego obrazu, należało pobrać wartości poszczególnych kanałów pikseli obrazu.
		Samo konstruowanie histogramu polega na przeiterowaniu po wszystkich pikselach obrazy i
		zliczeniu wystąpień danych wartości.
		Przekształcenie obrazu oparte o modyfikacje histogramu do określonej charakterystyki 
		polega na zmianie wszystkich wartości pikseli według odpowiedniego wzoru. Naszym wariantem
		jest rozkład Releigha, określony wzorem:
		
			<insert the equation for Releigh from exercise description page 1>		(2)
			
	Splot
	
		Splot wykonuje się według równania (1). Maski wykorzystane do poszczególnych podzadań
		są podane poniżej:
		
					[ -1 -1 -1 ]
		- południe: [  1 -2  1 ]
					[  1  1  1 ]
		
								[  1 -1 -1 ]
		- południowy-zachód: 	[  1 -2 -1 ]
								[  1  1  1 ]
		
					[  1  1 -1 ]
		- zachód:	[  1 -2 -1 ]
					[  1  1 -1 ]
		
							[  1  1  1 ]
		- północy-zachód:	[  1 -2 -1 ]
							[  1 -1 -1 ]
		
	3. Opis implementacji
		
		Szkielet aplikacji powstał w języku java. Wszystkie metody jak i interfejs zostały 
		zaiplementowane w wyżej wspomnianym języku programowania. Do stworzenia histogramów 
		wykorzystano bibliotekę JFreeChart.
		Sama hierarchia programu nie jest skomplikowana. Metody przetwarzania wczytywanego
		obrazu zostały zamieszczone w jednej klasie zwanej ImageReading. Klasa odpowiedzialna
		za wyświetlenie zarówno obrazu wejściowego jak i wyjściowego to ImageDisplay. HistogramAction
		jak sama nazwa wskazuje, służy do tworzenia histogramów. Wszystkie metody są później wywoływane
		w klasie Main.
		
	4. Wyniki	
		
			<insert screenshots of different methods>
		
	5. Dyskusja(if we need it that is)
	
			<I dunno what to write here, since our program is not 100% functional yet>
			<I could copy what's in the example you've sent me but that's just... you know>
			
	6. Wnioski
	
			<This part will be written after we have all of the pictures right>
		